name: testing e2e
on:
  workflow_dispatch:
    inputs:
      essentials:
        description: 'run test @c-essential'
        type: boolean
      auth:
        description: 'run test auth'
        type: boolean
      browser:
        description: 'run test browser'
        type: boolean
      flaky:
        description: 'run test flaky'
        type: boolean
      fail:
        description: 'run test fail'
        type: boolean
      all:
        description: 'run all test'
        type: boolean
      
    

jobs:
  initial:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Status block
        run: gh api --method POST -H "Accept':' application/vnd.github+json" -H "X-GitHub-Api-Version':' 2022-11-28" repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/statuses/${{ github.sha }} -f state='pending' -f context='e2e' -f description='Running tests'
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Echo PR
        run: |
          gh pr list -B ${{ github.ref_name }}
        env:
          GH_TOKEN: ${{ github.token }}          
      - name: Comment PR
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const name = '${{ github.workflow   }}';
            const url = '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}';
            const body = `${name}: Comment PR\n${url}`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })
  build:
    name: playwright
    needs: initial
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.46.0-noble
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Node.js version 20.17
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
            node-version: '20.17'

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Install Playwright browsers
      # - name: Install Playwright browsers
      #   run: |
      #     npx playwright install --with-deps
      #     # ls ~/.cache/ms-playwright/webkit-2083/

      # Wait for previous job to finish
      - name: Turnstyle
        uses: softprops/turnstyle@v2
        with:
          same-branch-only: false

      # Get selected inputs
      - id: get-selected-step
        uses: joao-zanutto/get-selected@v1.1.1
        with:
          separator: "|"

      # Run e2e test
      - name: Run Playwright tests
        if: ${{ !inputs.all }}
        run: npm run e2e -- --grep "${{ steps.get-selected-step.outputs.selected }}"
        env:
          ENV: "PROD"
          DEBUG: "pw:api"
      
      # Run e2e test
      - name: Run Playwright tests c-essential
        if: ${{ inputs.all }}
        run: npm run e2e
        env:
          ENV: "PROD"
          DEBUG: "pw:api"
      
      # Upload test report on failure
      - name: Upload report on failure
        uses: actions/upload-artifact@v4
        id: artifact-upload-step
        if: ${{ failure() }}
        with:
          name: report-${{ github.sha }}
          path: ./e2e/temp/test-report

      - name: Fail status
        if: ${{ failure() }}
        run: |
          echo "TEST_STATUS=failure" >> "$GITHUB_ENV"
          echo 'Artifact URL is ${{ steps.artifact-upload-step.outputs.artifact-url }}'


      # - name: Success status
      #   if: ${{ !failure() }}
      #   run: echo "TEST_STATUS=success" >> "$GITHUB_ENV"

  end:
    runs-on: ubuntu-latest
    permissions: write-all
    needs: build
    if: ${{ always() && !cancelled() }}
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - name: Status failure
        if: ${{ needs.build.result == 'failure' }}
        run: |
          gh api --method POST -H "Accept':' application/vnd.github+json" -H "X-GitHub-Api-Version':' 2022-11-28" repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/statuses/${{ github.sha }} -f state='failure' -f context='e2e' -f description='Tests end'
      
      - name: Status Success
        if: ${{ needs.build.result == 'success' }}
        run: |
          gh api --method POST -H "Accept':' application/vnd.github+json" -H "X-GitHub-Api-Version':' 2022-11-28" repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/statuses/${{ github.sha }} -f state='success' -f context='e2e' -f description='Tests end'
        
