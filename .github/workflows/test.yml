name: testing
on:
  workflow_dispatch:
    inputs:
      essentials:
        descriptcion: 'test @c-essential'
        type: boolean
      
jobs:
  initial:
    runs-on: ubuntu-latest
    steps:
      - name: Status block
        run: gh api --method POST -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/statuses/${{ github.sha }} -f state='pending' -f context='e2e' -f description='Running tests'
        env:
          GH_TOKEN: ${{ github.token }}
  build:
    name: playwright
    needs: initial
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.46.0-noble
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Node.js version 20.17
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
            node-version: '20.17'

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Install Playwright browsers
      # - name: Install Playwright browsers
      #   run: |
      #     npx playwright install --with-deps
      #     # ls ~/.cache/ms-playwright/webkit-2083/

      # Wait for previous job to finish
      - name: Turnstyle
        uses: softprops/turnstyle@v2
        with:
          same-branch-only: false

      # Run e2e test
      - name: Run Playwright tests
        if: ${{ !inputs.essentials }}
        run: npm run e2e
        env:
          ENV: "PROD"
          DEBUG: "pw:api"
      
      # Run e2e test
      - name: Run Playwright tests c-essential
        if: ${{ inputs.essentials }}
        run: npm run e2e -- --grep @c-essential
        env:
          ENV: "PROD"
          DEBUG: "pw:api"
      
      # Upload test report on failure
      - name: Upload report on failure
        uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
          name: report-${{ github.sha }}
          path: ./e2e/temp/test-report

      - name: Status unlock
        run: gh api repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/statuses/${{ github.sha }} -f state='success' -f context='e2e' -f description='Test end'
